{u'status': u'success', u'result': [
  {u'end': 7812524, u'geneId': u'AT1G22130.1', u'start': 7812387, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'},
  {u'end': 7812524, u'geneId': u'AT1G22130.1', u'start': 7812387, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'},
  {u'end': 7812763, u'geneId': u'AT1G22130.1', u'start': 7812598, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'},
  {u'end': 7812763, u'geneId': u'AT1G22130.1', u'start': 7812598, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'},
  {u'end': 7813143, u'geneId': u'AT1G22130.1', u'start': 7812883, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813143, u'geneId': u'AT1G22130.1', u'start': 7812883, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813292, u'geneId': u'AT1G22130.1', u'start': 7813231, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813292, u'geneId': u'AT1G22130.1', u'start': 7813231, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813399, u'geneId': u'AT1G22130.1', u'start': 7813372, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813399, u'geneId': u'AT1G22130.1', u'start': 7813372, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813596, u'geneId': u'AT1G22130.1', u'start': 7813535, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813596, u'geneId': u'AT1G22130.1', u'start': 7813535, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813698, u'geneId': u'AT1G22130.1', u'start': 7813680, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813698, u'geneId': u'AT1G22130.1', u'start': 7813680, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813829, u'geneId': u'AT1G22130.1', u'start': 7813797, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813829, u'geneId': u'AT1G22130.1', u'start': 7813797, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7813975, u'geneId': u'AT1G22130.1', u'start': 7813922, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7813975, u'geneId': u'AT1G22130.1', u'start': 7813922, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7814259, u'geneId': u'AT1G22130.1', u'start': 7814075, u'chromosome': u'1', u'type': u'CDS', u'strand': u'-'}, 
  {u'end': 7814259, u'geneId': u'AT1G22130.1', u'start': 7812387, u'chromosome': u'1', u'type': u'protein', u'strand': u'-'}, 
  {u'end': 7814264, u'geneId': u'AT1G22130.1', u'start': 7814260, u'chromosome': u'1', u'type': u'five_prime_UTR', u'strand': u'-'}, 
  {u'end': 7814264, u'geneId': u'AT1G22130.1', u'start': 7814075, u'chromosome': u'1', u'type': u'exon', u'strand': u'-'}, 
  {u'end': 7814264, u'geneId': u'AT1G22130.1', u'start': 7812387, u'chromosome': u'1', u'type': u'mRNA', u'strand': u'-'}
]}



sort by start and end

five_prime_UTR... depending on strand sign, take the end of the five_prime_UTR if strand =='-', else take the start of the five_prime_UTR if strand == '+'

for end -> if strand == '-' take START of last exon. if strand == '+' take END of last exon

for next week try to map the above data to a line... with red boxes denoting the exons.

samtools mpileup http://newland.iplantcollaborative.org/iplant/home/araport/rnaseq_bam/aerial/ERR274310/accepted_hits.bam -r Chr1:7812387-7814260


always keep the smaller number to the left, and the bigger number to the right.

try to vary and colour the height of the axes, try to remove axes labels.

xmll:
 - path to the bam index file
 - total number of reads - SRR.mapped.condition
 - colour for the rna pileup graph
 - part to be specified in the svg view (ggplot - ggefp... is in R, and figure out how to pipe from python to R) to grab the particular EFP region
 - annotation of keywords or something about the experimentsor the part of the plant
 - compatible with IGB...
 
 
 investigate gdmodule.... see if you can speed up the rate at which it draws the lines. 
 
 now that we have the sambam.py script working, we can call that from a cgi, to put exon graph on top of the reads graph on the same axis to show which part of the gene is being produced more
 
 mock up xml! only one or two records
 
 